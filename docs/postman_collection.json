{
  "info": {
    "name": "TravelRoutes API - Local",
    "_postman_id": "d0a1c6d2-0000-4000-8000-000000000000",
    "description": "Colección para probar endpoints: register, login, private y routes (localhost:3001)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5001/api"
    },
    {
      "key": "token",
      "value": ""
    }
  ],
  "item": [
    {
      "name": "Register (POST /register)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"testuser1@example.com\",\n  \"password\": \"password123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/register",
          "host": [
            "{{baseUrl}}/register"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Login (POST /login)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"testuser1@example.com\",\n  \"password\": \"password123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/login",
          "host": [
            "{{baseUrl}}/login"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Extrae el token del body y lo guarda en la variable de colección 'token'",
              "if (pm.response.code === 200 || pm.response.code === 201) {",
              "  try {",
              "    const body = pm.response.json();",
              "    if (body.token) {",
              "      pm.collectionVariables.set('token', body.token);",
              "      console.log('Token guardado en collection variable');",
              "    } else if (body.data && body.data.token) {",
              "      pm.collectionVariables.set('token', body.data.token);",
              "    }",
              "  } catch (e) { console.log('No se pudo parsear respuesta JSON:', e) }",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "response": []
    },
    {
      "name": "Private (GET /private)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/private",
          "host": [
            "{{baseUrl}}/private"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get all routes (GET /routes)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/routes",
          "host": [
            "{{baseUrl}}/routes"
          ]
        }
      },
      "response": []
    }
  ]
}
